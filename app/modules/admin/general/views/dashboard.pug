include ../../../../templates/head
append head
  style.
    h3 span{
      margin-right:10px;
    }

    #toast-container > div {
      opacity: 1;
    }

block main
  //- #navbar.hidden

  section#main-content
    section.wrapper.site-min-height
      .row
        .col-lg-9.main-chart
          .row
            .col-md-2.col-sm-2.box0.col-md-offset-3
              .box1
                span.li_heart
                h3 #{activeMembersCount}
              p #{activeMembersCount} Active Members
            .col-md-2.col-sm-2.box0
              .box1
                span.li_calendar
                h3 #{countActiveTrainers}
              p #{countActiveTrainers} Active Trainers
            .col-md-2.col-sm-2.box0
              .box1
                span.li_vynil
                h3 #{classes.length}
              p #{classes.length} Active Classes
          
          .row.mt
            .col-md-1
            .col-md-4.mb
              .darkblue-panel.pn
                .darkblue-header
                  h5 TOP USER
                p
                  img.img-circle(src=`assets/images/${topUser.pic}`, width='80' height='80')
                footer
                  p
                    b #{topUser.userfname} #{topUser.userlname}
                  .row
                    .col-md-6
                      h5.small.mt MEMBER SINCE
                      p #{topUser.acceptdate}
                    .col-md-6
                      h5.small.mt TOTAL SPEND
                      p #{utils.currsymbol} #{topUser.total}
                
            .col-md-7
              canvas#memberByMembership
          .row.mt
            //- .col-lg-9.main-chart.charts
            .col-md-2
            .col-md-12
              canvas#memberByMonth
            .col-md-2
              
        .col-lg-3.ds
          h3 
            span.li_heart 
            |  Membership
          each membership in memberships
            .desc
              .thumb
                img.img-circle(src='assets/img/gold.png', width='35px', height='35px', align='')
              .details
                h6 #{membership.memclassname} Membership
          h3 
            span.li_calendar 
            |  Class List
          each cl in classes
            .desc
              .thumb
                img.img-circle(src='assets/img/class.png', width='35px', height='35px', align='')
              .details
                h6 #{cl.eventclassname}
            //- .desc
            //-   .thumb
            //-     img.img-circle(src='assets/img/class.png', width='35px', height='35px', align='')
            //-   .details
            //-     h6 Aerobics
            //- .desc
            //-   .thumb
            //-     img.img-circle(src='assets/img/class.png', width='35px', height='35px', align='')
            //-   .details
            //-     h6 General Training

          //- Input for RFID
          input#hiddenInput(type='text' style="opacity:0" )


include ../../../../templates/foot.pug

script.

  $(document).ready(function () {
    const oneHour = 3600000
    const toastrOption = {
      closeButton: true,
      positionClass: "toast-bottom-right",
      timeOut: oneHour,
      extendedTimeOut: oneHour
    }

    $.post('/view/notif').done(function (data) {
      if (data.length !== 0){
        toastr.info(`You have ${data.length} pending membership`, 'Membership Request', toastrOption )
      }
    })

    $.post('/view/notif/payment').done(function (data) {
      if (data.length !== 0){
        toastr.info(`${data.length} clients purchased sessions`, 'Training Session', toastrOption )
      }
    })

  })

script.
  $(document).ready(function () {
    setInterval(function(){
      $('#hiddenInput').trigger('focus')
    },500)


    $('#hiddenInput').on('change', function(){
    $.post('/', { 
      cardNumber: $(this).val()
    }).done(function(response){
      if(response == 'noCard'){
        swal({
          title: 'Card does not exist!',
          text: 'This card is either unregistered, or the owner\'s membership has expired.',
          type: 'error',
          showCancelButton: false,
          showConfirmButton: false,
          timer: 6000
        });
        $('#hiddenInput').val('');
      }
      else{
        //- if(response[0].branchname) { const branchName = 'Exclusive';}
        //- else { const branchName = 'Interbranch';}
        //- console.log(branchName);
        swal({
          title: response[0].userfname + ' ' + response[0].userlname,
          html: 'Subscription: ' + response[0].memclassname + ' â€” ' + response[0].membershipname,// + '<br>Branch: </b>' + branchName,
          type: 'success',
          footer: '<b>Expiration Date</b>:  ' + response[0].expiryDate,
          showCancelButton: false,
          showConfirmButton: false,
          timer: 6000
        })
        $('#hiddenInput').val('');
      }
    });
    })
  })

script.
  $(document).ready(function(){

    //- LINE CHART
    //- dataset
    let months = []
    let numberOfMembersApplied = []
    
    $.post('/view/member/per/month').done(data => {
      data.forEach(data => {
        switch (data.monthname) {
          case 'January': months.push('Jan')
            break
          case 'February': months.push('Feb')
            break
          case 'March': months.push('Mar')
            break
          case 'April': months.push('Apr')
            break
          case 'May': months.push('May')
            break
          case 'June': months.push('Jun')
            break
          case 'July': months.push('Jul')
            break
          case 'August': months.push('Aug')
            break
          case 'September': months.push('Sept')
            break
          case 'October': months.push('Oct')
            break
          case 'November': months.push('Nov')
            break
          case 'December': months.push('Dec')
            break
        }
        numberOfMembersApplied.push(data.total)
      })
    })

    //- initialization
    const chartMemberByMonth = document.getElementById('memberByMonth').getContext('2d')
    const chartMemberByMembership = document.getElementById('memberByMembership').getContext('2d')

    setTimeout(() => {
      const chart1 = new Chart(chartMemberByMonth, {
        type: 'line',
        data: {
          labels: months,
          datasets: [{
            label: 'Members Registered',
            data: numberOfMembersApplied,
            backgroundColor: '#2F96B4',
            borderColor: '#2F96B4',
            fill: false,
          }]
        },
        options: {
          title: {
            display: true,
            text: 'Top Registers'
          },
          scales: {
            xAxes: [{
              gridLines: {
                display: true,
                drawBorder: true,
                drawOnChartArea: false,
              }
            }],
            yAxes: [{
              gridLines: {
                display: true,
                drawBorder: true,
              },
              ticks: {
                stepSize: 5
              }
            }]
          }
        }
      })
    }, 500)

    //- PIE CHART
    let memberships = []
    let membershipsWithDescription = []
    let memberCount = []
    
    $.post('/graph/membership/members').done(function (allMemberships) {
      allMemberships.forEach(membership => {
        memberships.push(membership.memclassname)
      })
      memberships.forEach(membership => {
        $.post('/graph/membership/members/count', { membership }).done(count => {
          for (let key in count[0]) {
            membership = `${membership} members count - ${count[0][key]}`
            membershipsWithDescription.push(membership)
            memberCount.push(count[0][key])
          }
        })
      })
    })

    setTimeout(() => {
      const chart2 = new Chart(chartMemberByMembership, {
        type: 'doughnut',
        data: {
          labels: membershipsWithDescription,
          datasets: [{
            label: 'Members Registered',
            data: memberCount,
            backgroundColor: [
              '#ff6961',
              '#FCCA83',
              '#779ecb',
              '#ffb3ba',
              '#baffc9',
              '#ffffba'
              ],
            borderColor: '#f2f2f2',
            label: 'Dataset 1'
          }]
        },
        options: {
          title: {
            display: true,
            text: 'Most Applied'
          },
          legend: {
            position: 'bottom',
          },
          tooltips: {
            callbacks: {
              label: function(tooltipItem, data) {
                let dataset = data.datasets[tooltipItem.datasetIndex];
                let total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                  return previousValue + currentValue;
                });
                let currentValue = dataset.data[tooltipItem.index];
                let percentage = Math.floor(((currentValue/total) * 100)+0.5);         
                return percentage + "%";
              }
            }
          }
        }
      })
    }, 500)
  })