include ../../../../templates/head

block main    

    section#main-content
      section.wrapper.site-min-height
        .row.mt
          .col-md-12
            .content-panel
              .container-fluid
                table.table.table-advance.table-hover
                  h4(style="float:left")
                    |   Sales Report
                  p(style="position: absolute;right: 422px;top: 76px;font-size: 14px;") Filter by Month: 
                  select(id="monthFilter" style="position: absolute;right: 270px;top: 69px;float:right;font-size: 14px;padding: 5px 26px;border-radius: 3px; cursor: pointer;")
                    option(value='-')
                    option(value='January') January
                    option(value='Febuary') Febuary
                    option(value='March') March
                    option(value='April') April
                    option(value='May') May
                    option(value='June') June
                    option(value='July') July
                    option(value='August') August
                    option(value='September') September
                    option(value='October') October
                    option(value='November') November
                    option(value='December') December
                  div(style="clear:both")
                  thead
                    tr
                      th
                        i.fa.fa-home
                        |  Name
                      th
                        i.Calendar
                        |  Date
                      th
                        i.fa.fa-user
                        |  Type
                      th
                        i.fa.fa-user
                        |  Amount
                      th
                        i.fa.fa-user
                        |  Branch
                  tbody(id="record-div")
                    each q in qClass              
                      tr(class="record")
                        td #{q.userfname} #{q.userlname}
                        td(date=`${q.paymentdate}`) #{q.paymentdate}
                        td 
                          if q.classification=='1' 
                            | Membership
                          else if q.classification=='2' 
                            | Freeze
                          else if q.classification=='3' 
                            | Walkin
                          else if q.classification=='4' 
                            | Discounted Membership
                          else if q.classification=='5' 
                            | Session
                          else if q.classification=='6' 
                            | Change Membership
                        td â‚± #{q.amount}
                        td #{q.branchname}
                  tfoot
                    tr
                      th
                        i.fa.fa-home
                        |  Name
                      th
                        i.Calendar
                        |  Date
                      th
                        i.fa.fa-user
                        |  Type
                      th
                        i.fa.fa-user
                        |  Amount
                      th
                        i.fa.fa-user
                        |  Branch
        .row.mt
          .col-md-6   
            .content-panel
                canvas#memberByMonth   
          .col-md-6   
            .content-panel
               canvas#memberByMembership   
   
                    
                                    
include ../../../../templates/foot

script.
  $(`select#monthFilter`).change(function(){
    let thisMonth = $(this).val()
    if(thisMonth != `-`){
      $(`tr.record`).each(function(){
        if(thisMonth == $(this).children(`td:nth-child(2)`).attr('date').split(" ")[0]){      
          $(this).removeAttr('hidden')
        }
        else{
          $(this).attr('hidden','hidden')
        }
      })
    }
    else{
      $(`tr.record`).removeAttr('hidden')
    }
  })

script.
    $('table').DataTable( {
        dom: 'Bfrtip',
        buttons: [
            { extend:'copy', attr: { id: 'allan' } }, 'csv', 'excel', 'pdf', 'print'
        ],
    initComplete: function () {
      this.api().columns().every(function () {
        var column = this;
        var select = $('<select><option value=""></option></select>')
          .appendTo($(column.footer()).empty())
          .on('change', function () {
            var val = $.fn.dataTable.util.escapeRegex(
              $(this).val()
            );
            column
              .search(val ? '^' + val + '$' : '', true, false)
              .draw();
          });
        column.data().unique().sort().each(function (d, j) {
          select.append('<option value="' + d + '">' + d + '</option>')
        });
      });
    }
  });

script.
  $(document).ready(function(){

    //- LINE CHART
    //- dataset
    let months = []
    let numberOfMembersApplied = []
    
    $.post('/view/member/per/month').done(data => {
      data.forEach(data => {
        switch (data.monthname) {
          case 'January': months.push('Jan')
            break
          case 'February': months.push('Feb')
            break
          case 'March': months.push('Mar')
            break
          case 'April': months.push('Apr')
            break
          case 'May': months.push('May')
            break
          case 'June': months.push('Jun')
            break
          case 'July': months.push('Jul')
            break
          case 'August': months.push('Aug')
            break
          case 'September': months.push('Sept')
            break
          case 'October': months.push('Oct')
            break
          case 'November': months.push('Nov')
            break
          case 'December': months.push('Dec')
            break
        }
        numberOfMembersApplied.push(data.total)
      })
    })

    //- initialization
    const chartMemberByMonth = document.getElementById('memberByMonth').getContext('2d')
    const chartMemberByMembership = document.getElementById('memberByMembership').getContext('2d')

    setTimeout(() => {
      const chart1 = new Chart(chartMemberByMonth, {
        type: 'line',
        data: {
          labels: months,
          datasets: [{
            label: 'Members Registered',
            data: numberOfMembersApplied,
            backgroundColor: '#2F96B4',
            borderColor: '#2F96B4',
            fill: false,
          }]
        },
        options: {
          title: {
            display: true,
            text: 'Top Registers'
          },
          scales: {
            xAxes: [{
              gridLines: {
                display: true,
                drawBorder: true,
                drawOnChartArea: false,
              }
            }],
            yAxes: [{
              gridLines: {
                display: true,
                drawBorder: true,
              },
              ticks: {
                stepSize: 5
              }
            }]
          }
        }
      })
    }, 500)

    //- PIE CHART
    let memberships = []
    let membershipsWithDescription = []
    let memberCount = []
    
    $.post('/graph/membership/members').done(function (allMemberships) {
      allMemberships.forEach(membership => {
        memberships.push(membership.memclassname)
      })
      memberships.forEach(membership => {
        $.post('/graph/membership/members/count', { membership }).done(count => {
          for (let key in count[0]) {
            membership = `${membership} members count - ${count[0][key]}`
            membershipsWithDescription.push(membership)
            memberCount.push(count[0][key])
          }
        })
      })
    })

    setTimeout(() => {
      const chart2 = new Chart(chartMemberByMembership, {
        type: 'doughnut',
        data: {
          labels: membershipsWithDescription,
          datasets: [{
            label: 'Members Registered',
            data: memberCount,
            backgroundColor: [
              '#ff6961',
              '#FCCA83',
              '#779ecb',
              '#ffb3ba',
              '#baffc9',
              '#ffffba'
              ],
            borderColor: '#f2f2f2',
            label: 'Dataset 1'
          }]
        },
        options: {
          title: {
            display: true,
            text: 'Most Applied'
          },
          legend: {
            position: 'bottom',
          },
          tooltips: {
            callbacks: {
              label: function(tooltipItem, data) {
                let dataset = data.datasets[tooltipItem.datasetIndex];
                let total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                  return previousValue + currentValue;
                });
                let currentValue = dataset.data[tooltipItem.index];
                let percentage = Math.floor(((currentValue/total) * 100)+0.5);         
                return percentage + "%";
              }
            }
          }
        }
      })
    }, 500)
  })



  