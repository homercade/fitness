include ../../../templates/mem-head
append head
  style.
    #toast-container > div {
      opacity: 1;
    }

block main   

  .container
    .content
      .col-lg-8
        b
          p#dateTimeNow.text-center(style="position:absolute!important")
        .alert.alert-success.alert-dismissable.mt
          button.close(type='button', data-dismiss='alert', aria-hidden='true') ×
          strong Welcome!
          p This calendars shows all available classes in 
            b(style="color: #3a87ad") BLUE 
            | colored boxes and events in 
            b(style="color: #ffb347") ORANGE 
            | colored boxes! 

        section.panel.mt
          .panel-body
            #kalendaryo
      each pr in profs
        .col-lg-4.mt
          section.panel
            .panel-body
              .row
                .white-panel
                  .white-header
                    h5 Profile
                  p
                    img.img-circle(src=`assets/images/${pr.pic}`, width='80' height='80')
                  p
                    b #{pr.userfname} #{pr.userlname}
                  .row
                    .col-md-6
                      p.small.mt MEMBER SINCE
                      p #{pr.acceptdate}
                    .col-md-6
                      p.small.mt TOTAL SPEND
                      p ₱ #{total}
        .col-lg-4.mt
          section.panel
            .panel-body
              .row
                .white-panel
                  .white-header
                    h5 Price per Session today
                  .row
                    h1 ₱ #{fee.fee}.00

  //- HIDDEN VALUES
  input#expirydate.hidden(value=expirydate.expirydate)  

include ../../../templates/foot
include ../../../templates/sub-foot

script.

  $(function(){
    const oneHour = 3600000
    const toastrOption = {
      closeButton: true,
      positionClass: "toast-bottom-left",
      timeOut: oneHour,
      extendedTimeOut: oneHour
    }
    
    const expiryDate = moment($('#expirydate').val()).format()
    const shouldShowAlert = moment(expiryDate).subtract(7, 'd').format()
    const today = moment().format()
    const subtractDate = function(from, now) {
      alertDate = new Date(now);
      dateToday = new Date(from);
      return Math.floor((Date.UTC(dateToday.getFullYear(), dateToday.getMonth(), dateToday.getDate()) - 
        Date.UTC(alertDate.getFullYear(), alertDate.getMonth(), alertDate.getDate()) ) /(1000 * 60 * 60 * 24));
      }
    const dueInAWeek = shouldShowAlert <= today
    const daysFromNow = subtractDate(expiryDate, today)
    console.log(expiryDate, today)
    if (dueInAWeek){
      if (daysFromNow === 1) toastr.error(`Your membership will expire ${daysFromNow}.`, 'Membership Application', toastrOption)
      else if (daysFromNow === 0) toastr.error(`Your membership will expire tomorrow!`, 'Membership Application', toastrOption)
      else toastr.warning(`Your membership will expire in ${daysFromNow}.`, 'Membership Application', toastrOption)
    } 
  })
  
  setInterval(()=>{
    let dateTimeNow = moment().format('llll') 
    $('#dateTimeNow').text(`${dateTimeNow}`)
  }, 1000)

  $(document).ready(function () {

    setInterval(function(){
      $.post('/member/create-notification').done(function(){
      })
    }, 1000)

    $.post('/member/event/view').done(function (data) {

      var events = []
      var eventId 
      var type
      var now = moment().format('YYYY-MM-DD')

      for (i = 0; i < data.length; i++) {

        //- events
        let name = `${data[i].eventclassname}`
        let dateStart = moment(data[i].startdate).format('YYYY-MM-DD')
        let dateEnd = moment(data[i].enddate).format('YYYY-MM-DD')
        let timeStart = moment(data[i].starttime, 'hh:mm A').format('HH:mm')
        let timeEnd = moment(data[i].endtime, 'hh:mm A').format('HH:mm')
        let start = `${dateStart} ${timeStart}`
        let end = `${dateEnd} ${timeEnd}`
        eventId = data[i].eventclassid
        type = data[i].type

        //- class
        let days = `[${data[i].days}]`  
        let daysArray = JSON.parse(days)
        let eventDesc = {
          id: eventId,
          title: name,
          start: start,
          end: end,
          type: data[i].type,
          color: '#966fd6'
        }

        let classDesc = {
          id: eventId,
          title: name,
          start: timeStart,
          end: timeEnd,
          type: data[i].type,
          dow: daysArray
        }
        events.push(eventDesc, classDesc)
        console.log({eventDesc})
      }

      $('#kalendaryo').fullCalendar({
        header: {
          left: 'prev,next',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
        selectable: true,
        events: events,
        eventRender: (event, element) => {
          if (event.type == 2) {
            element.css({
              'background-color': '#ffb347',
              'border-color': '#ffb347'
            });
          }
        },
        select: function (startDate, jsEvent, view) {
          let view = $('#kalendaryo').fullCalendar('getView')
          if (view.name != 'month') {
          } else if (view.name == 'month') {
            $('#kalendaryo').fullCalendar('changeView', 'agendaDay')
            $('#kalendaryo').fullCalendar('gotoDate', startDate)
          } else {
            return
          }
        },
        viewRender: (view, element) => {
          $('#kalendaryo').fullCalendar( 'rerenderEvents' )
        },
      })
    })
  })