include ../../../templates/tr-head
block main   

  .container
    section.wrapper.site-min-height(style='margin-top:15px;')
      .col-lg-12
        .row.content-panel
          .col-md-4.profile-text.mt.mb.centered
            -console.log(general)
            h3#membership #{general.memclassname} - #{general.membershipname}
            h6 Membership
            h3#session #{general.session_count}
            h6 Sessions Left
          .col-md-4.profile-text
            h3#fullname #{general.userfname} #{general.userlname}
            h6
              #branch #{general.memclassname} - #{general.membershipname}
              br
              #genderAge #{general.usergender} - #{general.userbday} yrs old 
              br
              #email #{general.useremail}
              br  
              #mobile #{general.usermobile} 
              input.hidden(type='text' value=`${general.userid}` id ='aydi')
              input.hidden#sessionForSchedCount(type=text value = general.sessionForSched)
              input.hidden#idForSched(type=text value = general.userid)
            h3 Other Trainees:
              #otherMember
              //- a(href='#')
              //-   img.img-circle(style='width:40px;margin-right:5px;', src='../../../assets/img/ui-zac.jpg')
              //- a(href='#')
              //-   img.img-circle(style='width:40px;margin-right:5px;', src='../../../assets/img/ui-sherman.jpg')
          .col-md-4.centered
            .profile-pic
              p
                img.img-circle.img-thumbnail(width=150 src='../../../assets/img/chip.png')
              p
                button.btn.btn-theme(value= general.memid, data-toggle='modal', data-target='.prompt')
                  | Give Up Client
      .col-lg-12.mt
        .row.content-panel
          .panel-heading
            ul.nav.nav-tabs.nav-justified
              li.active
                a(data-toggle='tab', href='#manage') Manage Trainees Schedule
              li
                a(data-toggle='tab', href='#history') History of Sessions
          .panel-body
            .tab-content
              #manage.tab-pane.active
                .row
                  .col-lg-3.mt.text-center
                    .panel-body
                      h5 Sessions left to Schedule: 
                      h1#sessionForSched #{general.sessionForSched}
                    
                  .col-lg-9.mt
                      .panel-body
                        #kalendaryo
              #history.tab-pane
                .row
                  .col-lg-12.mt
                    table.table
                      thead
                        tr
                          th Date & Time
                          th Status
                          th
                      tbody
                        tr
                          td 01/01/18 (8:00-9:00PM)
                          td Success
                          td
                            a(style='color:rgb(18, 35, 49); cursor:pointer;', data-toggle='modal', data-target='#remove')
                              i.fa.fa-times

.multiple-modal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
  .modal-dialog.modal-sm
    .modal-content
      .modal-header
        button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
        h4#myModalLabel.modal-title Schedule a Session
      form(action='', method='')
        .modal-body
          .container-fluid
            .row
              .col-md-12
                .form-group
                  #multiple 
                  input.time.form-control(type="text")
      .modal-footer
        button.btn.btn-default(type='button' data-dismiss='modal') Cancel
        button.btn.btn-theme(type='button') Save
                
.prompt.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
  .modal-dialog
    .modal-content
      .modal-header
        button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
        h4#myModalLabel.modal-title Change Trainer
      form(action='/send', method='POST')
        .modal-body
          .container-fluid
            .row
              .col-md-12
                .form-group
                  h4 Reason for Changing trainer:
                  textarea.form-control(rows='3')
      .modal-footer
        button.btn.btn-primary(type='submit') Save
        
#reason-modal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
  .modal-dialog
    .modal-content
      .modal-header
        button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
        h4#myModalLabel.modal-title Change Trainer
      form(action='/send', method='POST')
        .modal-body
          .container-fluid
            .row
              .col-md-12
                .form-group
                  h4 Reason for Changing trainer:
                  textarea.form-control(rows='3')
      .modal-footer
        button.btn.btn-primary(type='submit') Save

include ../../../templates/foot

//- ADD BUTTONS w/ ID
script.
  $(document).ready(function(){
    $.post('/trainer/trainee/OtherMember',{
      othermember: $('#aydi').val()
    }).done(function(data){
      for(var i=0;i<data.othermember.length;i++)
      {
        $('#otherMember').append(`
        <button class='member btn btn-theme01' style='border:none' value= ${data.othermember[i].userid}> ${data.othermember[i].userfname} </button>
        `)
      }
    })
  })

//- VIEW TRAINEE w/ BUTTON CLICKED
script.
  $(document).ready(function(){
    $(document).on('click', '.member', function(){
      
      var othermember = $(this).val()
        $.post('/trainer/trainee/OtherMember/view',{
          newmember: othermember
        }).done(function(data){
          
          data.newmember[0].userbday = moment().diff(data.newmember[0].userbday, 'years', false);
          //- console.log(data.newmember[0])
          $('#membership').text(data.newmember[0].memclassname+" "+"-"+" "+data.newmember[0].membershipname)
          $('#session').text(data.newmember[0].session_count)
          $('#fullname').text(data.newmember[0].userfname+" "+data.newmember[0].userlname)
          $('#branch').text(data.newmember[0].memclassname+" "+"-"+" "+data.newmember[0].membershipname)
          $('#genderAge').text(data.newmember[0].usergender+" "+"-"+" "+data.newmember[0].userbday+" yrs old")
          $('#email').text(data.newmember[0].useremail)
          $('#mobile').text(data.newmember[0].usermobile)
          $('#sessionForSched').text(data.newmember[0].sessionForSched)
          $('#sessionForSchedCount').val(data.newmember[0].sessionForSched)
          $('#idForSched').val(data.newmember[0].userid)
          
          $('#otherMember').empty()
          $.post('/trainer/trainee/otherMember',{othermember}).done(function(data){
            for(var i=0;i<data.othermember.length;i++)
             {
            $('#otherMember').append(`
            <button class='member btn btn-theme01' style='border:none' value= ${data.othermember[i].userid}> ${data.othermember[i].userfname}</button>
            `)
             }
          })
        })
    });
  });

//- INITIALIZE CALENDAR
script.
  $(document).ready(function () {

    $.post('/trainer/trainee/viewSched').done(function (data) {

      var evs = []
      var delId

      for (i = 0; i < data.length; i++) {
        let name = `${data[i].userfname} ${data[i].userlname}`
        let sessionDate = moment(data[i].sessionDate).format('YYYY-MM-DD')
        let timeStart = moment(data[i].sessionTime, 'hh:mm a').format('HH:mm')
        let timeEnd = moment(data[i].sessionTime, 'hh:mm a').add(1, 'h').format('HH:mm')
        let start = `${sessionDate} ${timeStart}`
        let end = `${sessionDate} ${timeEnd}`
        delId = data[i].PTid
        //- console.log(delId, 'yogi')
        console.log(name)
        console.log(start)
        console.log(end)
        var desc = {
          id: delId,
          title: name,
          start: start,
          end: end,
          eventSessionId: data[i].sessionID,
          color: '#ffb347',
          overlap: false,
        }
        evs.push(desc)
      }
      //- calendar.fullCalendar('renderEvents', evs)
      var date = new Date();
      var d = date.getDate();
      var m = date.getMonth();
      var y = date.getFullYear();
      
      var calendar = $('#kalendaryo').fullCalendar({
        header: {
          left: 'prev,next',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
        allDaySlot: false,
        weekMode: 'liquid',
        editable: true,
        eventOverlap: false,
        eventStartEditable: true,
        eventDurationEditable: false,
        minTime: '08:00',
        maxTime: '21:00',
        eventClick: function (event, jsEvent, view) {
          swal({
              title: 'Cancel Schedule?',
              type: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Confirm'
            })
            .then((result) => {
              if (result.dismiss != 'cancel') {
                $.post('/trainer/trainee/schedule/delete', {
                  delId: event.id,
                  eventSessionId: event.eventSessionId
                }).done(
                  swal({
                    type: 'success',
                    title: 'You Succesfully Cancelled a Session',
                    showConfirmButton: false,
                    timer: 1500
                  })
                  .then(() => {
                    location.reload();
                  })
                )
              }
            })
        },
        selectable: true,
        selectHelper: true,
        allowOutsideClick: false,
        events: evs,
        select: function (startDate, jsEvent, view) {

          var schedCount = $('#sessionForSchedCount').val()
          var idForSched = $('#idForSched').val()
          var view = $('#kalendaryo').fullCalendar('getView')

          if (view.name != 'month') {
            if (schedCount > 0) {
              var scheduleDate = moment(startDate).format('YYYY-MM-DD')
              var scheduleDate2 = moment(scheduleDate, 'YYYY-MM-DD').format('MMM D YYYY')
              timeStart = moment(startDate).format('hh:mm a')
              timeEnd = moment(timeStart, 'hh:mm a').add(1, 'h').format('hh:mm a')
              console.error('DATA TO BE SAVED')
              console.log(scheduleDate, '<- Date')
              console.log(timeStart, '<- Time Start')
              console.log(timeEnd, '<- Time End')

              swal({
                  title: 'Schedule a Personal Training Session on',
                  html: `<b>${scheduleDate2}</b></br><b>${timeStart} - ${timeEnd}</b>`,
                  type: 'info',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Confirm'
                })
                .then((result) => {
                  console.log(result)
                  if (result.dismiss != 'cancel') {
                    $.post('/trainer/trainee/schedule', {
                        othermember: $('#aydi').val(),
                        idForSched: idForSched
                      })
                      .done(function (data) {
                        console.log(data);
                        var memid = data[0].userid
                        var sessionid = data[0].sessionID
                        var sessionDate = scheduleDate
                        var sessionTime = timeStart
                        console.error(memid);
                        console.log(sessionid);
                        console.log(sessionDate);
                        console.log(sessionTime);
                        $.post('/trainer/trainee/schedule/add', {
                            memid: memid,
                            sessionid: sessionid,
                            sessionDate: sessionDate,
                            sessionTime: sessionTime,
                          })
                          .done(
                            swal({
                              type: 'success',
                              title: 'You Succesfully Scheduled a Session',
                              showConfirmButton: false,
                              timer: 1500
                            })
                            .then(() => {
                              location.reload();
                            })
                          )
                      })
                  }
                })
            } else {
              swal({
                type: 'error',
                title: 'Oops...',
                text: `This user haven't bought sessions to schedule yet.`,
              })
            }
          } else if (view.name == 'month') {
            if (schedCount > 0) {
              $('#kalendaryo').fullCalendar('changeView', 'agendaDay')
              $('#kalendaryo').fullCalendar('gotoDate', startDate)
            } else {
              swal({
                type: 'error',
                title: 'Oops...',
                text: `This user haven't bought sessions to schedule yet.`,
              })
            }
          } else {
            return
          }
        }
      })
    })
  })